{"version":3,"sources":["components/Header/NavBar.jsx","components/Header/Header.jsx","redux/constants/leads.js","redux/methods/index.js","redux/actions/leads.js","services/leads-api.js","components/Lead/EditLead.jsx","components/Common/DialogWithCallback.jsx","components/Lead/LeadsCard.jsx","components/Leads.jsx","components/Lead/AddLead.jsx","containers/Home.jsx","config/index.js","App.jsx","util/methods.js","redux/reducers/leads.js","redux/reducers/index.js","redux/store.js","serviceWorker.js","index.jsx"],"names":["useStyles","makeStyles","theme","grow","flexGrow","margin","spacing","appBar","zIndex","Toolbar","AppBarButtons","textTransform","title","fontSize","breakpoints","up","display","PrimaryAppBar","props","classes","className","AppBar","position","variant","Typography","noWrap","Button","color","Header","NavBar","FETCH_LEAD","FETCH_LEAD_SUCCESS","FETCH_LEAD_FAILURE","REFETCH_LEAD_SUCCESS","DELETE_LEAD","DELETE_LEAD_SUCCESS","DELETE_LEAD_FAILURE","filterArrayWithId","array","itemId","filter","item","id","concatArrayOfObjectsAndSortWithDateAsc","newArrayOfObjects","newArray","sort","a","b","date_updated","Date","date_created","date","notificationTemplate","arr","map","el","ActionCreatorFactory","type","payload","fetchLeadsSuccess","data","fetchLeadsError","error","getLeads","dispatch","axios","get","then","response","status","catch","console","log","notificationError","message","request","statusText","setLead","lead","getState","leads","refetchLeadsError","refetchLead","fetchLeadService","removeLeadError","deleteLead","delete","deleteLeadService","lead_id","root","width","shape","height","shapeCircle","borderRadius","colors","card","flexDirection","connect","state","addNotification","level","handleToggleActions","useState","first_name","last_name","email","notes","contacted","leadUpdate","setLeadUpdate","isLoading","setIsLoading","handleSubmit","event","preventDefault","formData","put","handleFieldChange","target","name","value","Card","noValidate","autoComplete","TextField","label","multiline","rowsMax","onChange","FormControlLabel","control","Switch","checked","inputProps","labelPlacement","CardActions","IconButton","onClick","disabled","DialogWithCallback","body","actionName","actionCallback","React","open","setOpen","handleClose","Dialog","onClose","disableBackdropClick","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","icon","cardContent","toggleDisplay","setToggleDisplay","toggleEdit","setToggleEdit","toggleDelete","setToggleDelete","action","Grid","xs","sm","md","CardContent","gutterBottom","component","created_at","formatDistanceToNow","parse","updated_at","marginRight","cardGrid","paddingTop","paddingBottom","Leads","loadLeads","Fragment","length","container","Fade","in","icons","cardColor","palette","common","white","AddLead","setDisplayAddLeadComponent","useDispatch","post","addLead","errors","firstName","lastName","boxShadow","cardDetails","flex","cardMedia","minWidth","textDecoration","secondary","main","divider","displayAddLeadComponent","useEffect","isLoaded","isError","Divider","origin","window","location","defaults","baseURL","config","defaultPaletteColors","primary","light","dark","marginTop","marginLeft","UINotificationsStyle","NotificationItem","DefaultStyle","notifications","document","createMuiTheme","contrastThreshold","tonalOffset","typography","CssBaseline","style","INITIAL_STATE","count","rootReducer","combineReducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","logger","Boolean","hostname","match","rootElement","getElementById","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.231a2769.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n    margin: theme.spacing(0),\n  },\n  appBar: {\n    zIndex: 200,\n  },\n  Toolbar: {\n    zIndex: 200,\n  },\n  AppBarButtons: {\n    textTransform: 'none',\n  },\n  title: {\n    fontSize: 15,\n    textTransform: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  }\n}));\n\nfunction PrimaryAppBar(props) {\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar variant=\"dense\" className={classes.Toolbar}>\n          <Typography variant=\"h4\" noWrap>\n              <Button \n                color=\"inherit\" \n                variant=\"text\"\n                className={classes.title}>\n                  Leads Management\n              </Button>\n          </Typography>\n          <div className={classes.grow} />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default PrimaryAppBar;","import React from 'react';\nimport NavBar from './NavBar';\n\nexport default function Header () {\n  return (\n      <header>\n        <NavBar />\n      </header>\n    )\n}\n","\nexport const FETCH_LEAD = 'FETCH_LEAD';\nexport const FETCH_LEAD_SUCCESS = 'FETCH_LEAD_SUCCESS';\nexport const FETCH_LEAD_FAILURE = 'FETCH_LEAD_FAILURE';\n\nexport const REFETCH_LEAD = 'REFETCH_LEAD';\nexport const REFETCH_LEAD_SUCCESS = 'REFETCH_LEAD_SUCCESS';\nexport const REFETCH_LEAD_FAILURE = 'REFETCH_LEAD_FAILURE';\n\nexport const DELETE_LEAD = 'DELETE_LEAD';\nexport const DELETE_LEAD_SUCCESS = 'DELETE_LEAD_SUCCESS';\nexport const DELETE_LEAD_FAILURE = 'DELETE_LEAD_FAILURE';\n\nexport const ACTIONS = {\n\tFETCH_LEAD,\n\tFETCH_LEAD_SUCCESS,\n\tFETCH_LEAD_FAILURE,\n\tDELETE_LEAD,\n\tDELETE_LEAD_SUCCESS,\n\tDELETE_LEAD_FAILURE,\n};","import React from \"react\";\n// react must be in scope for notificationTemplate's renderArray method\n// which includes jsx\n\nexport function updateItemInArray(array, newItem) {\n    let items = array.filter(item => item.id !== newItem.id );\n    items = [...items, newItem].sort( (a, b) => a.id-b.id);\n    return items;\n}\n\nexport function removeItemFromArray(array, itemId) {\n\treturn array.filter(item => item.id !== itemId)\n}\n\nexport function addObjectToArray(array, newItem) {\n\tconst checkIfExist = array.find( item => item.id !== newItem.id );\n\tif(checkIfExist){\n\t\treturn updateItemInArray(array, newItem)\n\t}\n\telse {\n\t\tconst newArray = [...array, newItem]\n\t\treturn newArray\n\t}\n}\n\nexport function updateObjectInArrayWithId(array, newItem) {\n\treturn array.map(item => {\n\t\tif (item.id !== newItem.id) {\n\t\t\t// This isn't the item we care about - keep it as-is\n\t\t\treturn item\n\t\t\t}\n\t\t// Otherwise, this is the one we want - return an updated value\n\t\treturn {\n\t\t...item,\n\t\t...newItem\n\t\t}\n\t})\n}\n\nexport function filterArrayWithId(array, itemId) {\n\treturn array.filter(item => {\n\t\tif (item.id !== itemId) {\n\t\t\t// This isn't the item we care about - keep it as-is\n\t\t\treturn item\n\t\t\t}\n\t\treturn false\n\t})\n}\n\nexport function filterArrayWithName(array, itemId) {\n\treturn array.filter(item => {\n\t\tif (item.name !== itemId) {\n\t\t\t// This isn't the item we care about - keep it as-is\n\t\t\treturn item\n\t\t\t}\n\t\treturn false\n\t})\n}\n\nexport function updateObjectInArrayWithName(array, newItem) {\n\treturn array.map(item => {\n\t\tif (item.name !== newItem.name) {\n\t\t\t// This isn't the item we care about - keep it as-is\n\t\t\treturn item\n\t\t\t}\n\t\t// Otherwise, this is the one we want - return an updated value\n\t\treturn {\n\t\t...item,\n\t\t...newItem\n\t\t}\n\t})\n}\n\nexport function concatArrayOfObjectsAndSortWithDateAsc(array, newArrayOfObjects=[]) {\n\tconst newArray = [...array, ...newArrayOfObjects]\n\tnewArray.sort(function(a, b) {\n\t\tif(a.date_updated && b.date_updated) {\n\t\t\treturn new Date(b.date_updated) - new Date(a.date_updated)\n\t\t}\n\t\telse if(a.date_created && b.date_created) {\n\t\t\treturn new Date(b.date_created) - new Date(a.date_created)\n\t\t}\n\t\telse if(a.date && b.date) {\n\t\t\treturn new Date(b.date) - new Date(a.date)\n\t\t}\n\t\telse {\n\t\t\treturn a - b\n\t\t}\n\t})\n\treturn newArray\n}\n\nexport function concatArrayOfObjectsAndSortWithDateDesc(array, newArrayOfObjects=[]) {\n\tconst newArray = [...array, ...newArrayOfObjects]\n\tnewArray.sort(function(a, b) {\n\t\tif(a.date_updated && b.date_updated) {\n\t\t\treturn new Date(a.date_updated) - new Date(b.date_updated)\n\t\t}\n\t\telse if(a.date_created && b.date_created) {\n\t\t\treturn new Date(a.date_created) - new Date(b.date_created)\n\t\t}\n\t\telse if(a.date && b.date) {\n\t\t\treturn new Date(a.date) - new Date(b.date)\n\t\t}\n\t\telse {\n\t\t\treturn a - b\n\t\t}\n\t})\n\treturn newArray\n}\n\nexport const notificationTemplate = {\n  title: '',\n  message: '',\n  position: 'bc',\n  autoDismiss: 2,\n  renderArray: (arr=[]) => (\n    <ul>\n      {arr.map(el => (\n        <li>{el}</li>\n      ))}\n    </ul>\n    ),\n};","import {\n\tFETCH_LEAD,\n\tFETCH_LEAD_SUCCESS,\n\tFETCH_LEAD_FAILURE,\n\tREFETCH_LEAD,\n\tREFETCH_LEAD_SUCCESS,\n\tREFETCH_LEAD_FAILURE,\n\tDELETE_LEAD,\n\tDELETE_LEAD_SUCCESS,\n\tDELETE_LEAD_FAILURE,\n\n} from '../constants/leads';\nimport { error as notificationError } from 'react-notification-system-redux';\nimport { fetchLeadsService, fetchLeadService, \n\tdeleteLeadService } from '../../services/leads-api';\nimport { concatArrayOfObjectsAndSortWithDateAsc } from '../methods';\n\nconst ActionCreatorFactory = (type, payload=null) => {\n\treturn {\n\t\ttype: type,\n\t\tpayload: payload\n\t}\n}\n\nconst fetchLeads = page => ActionCreatorFactory(FETCH_LEAD);\nconst fetchLeadsSuccess = data => ActionCreatorFactory(FETCH_LEAD_SUCCESS, data);\nconst fetchLeadsError = error => ActionCreatorFactory(FETCH_LEAD_FAILURE, error);\n\nexport function getLeads() {\n\treturn (dispatch) => {\n\t\tdispatch(fetchLeads());\n\t\tfetchLeadsService()\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(fetchLeadsError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tdispatch(fetchLeadsSuccess(response.data))\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.log(\"error =>\", error)\n\t\t\tdispatch(fetchLeadsError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to load Leadss`,\n\t\t\t}));\n\t\t})\n\t};\n}\n\nexport const setLead = (lead) => {\n\treturn (dispatch, getState) => {\n\t\tif(lead) {\n\t\t\tlet leads = getState().leads.leads;\n\t\t\tleads = concatArrayOfObjectsAndSortWithDateAsc(leads, [lead])\n\t\t\tdispatch(fetchLeadsSuccess(leads));\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nconst refetchLeads = page => ActionCreatorFactory(REFETCH_LEAD);\nconst refetchLeadsSuccess = data => ActionCreatorFactory(REFETCH_LEAD_SUCCESS, data);\nconst refetchLeadsError = error => ActionCreatorFactory(REFETCH_LEAD_FAILURE, error);\n\nexport const refetchLead = id => {\n\treturn (dispatch) => {\n\t\tdispatch(refetchLeads());\n\t\tfetchLeadService(id)\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(refetchLeadsError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tdispatch(refetchLeadsSuccess(response.data));\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch(refetchLeadsError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to refetch lead`,\n\t\t\t}));\n\t\t})\n\t}\n}\n\nconst removeLead = page => ActionCreatorFactory(DELETE_LEAD);\nconst removeLeadSuccess = data => ActionCreatorFactory(DELETE_LEAD_SUCCESS, data);\nconst removeLeadError = error => ActionCreatorFactory(DELETE_LEAD_FAILURE, error);\n\nexport const deleteLead = id => {\n\treturn (dispatch) => {\n\t\tdispatch(removeLead());\n\t\tdeleteLeadService(id)\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(removeLeadError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tdispatch(removeLeadSuccess({lead: response.data?.lead, lead_id: id}));\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch(removeLeadError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to delete lead`,\n\t\t\t}));\n\t\t})\n\t}\n}\n","import axios from 'axios';\n\nexport const fetchLeadsService = () => axios.get(`/api/leads/`);\nexport const fetchLeadService = id => axios.get(`/api/leads/${id}/`);\nexport const createLeadService = formData => axios.post(`/api/leads/`, {...formData});\nexport const updateLeadService = formData => axios.put(`/api/leads/${formData.id}/`, {...formData});\nexport const deleteLeadService = id => axios.delete(`/api/leads/${id}/`);\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nimport CardActions from '@material-ui/core/CardActions';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport NoteIcon from '@material-ui/icons/Note';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { updateLeadService } from '../../services/leads-api';\n\nimport {connect} from 'react-redux';\nimport { error as notificationError } from 'react-notification-system-redux';\nimport { refetchLead } from '../../redux/actions/leads';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '95% ',\n    },\n  },\n  shape: {\n    width: 30,\n    height: 30,\n    margin: theme.spacing(0.5)\n  },\n  shapeCircle: {\n    borderRadius: '25%',\n  },\n  colors: {\n  \tmargin: theme.spacing(1),\n  \t'& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n}));\n\nfunction EditLead(props) {\n\n\tconst { lead, handleToggleActions, addNotification, refetchLead } = {...props};\n  const classes = useStyles();\n  const [leadUpdate, setLeadUpdate] = useState(\n  \t{\n      id: lead.id,\n  \t\tfirst_name: lead.first_name, \n      last_name: lead.last_name, \n      email: lead.email, \n      notes: lead.notes, \n  \t\tcontacted: lead.contacted, \n    });\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n    try {\n      // Api Call To Create Lead\n      await updateLeadService(leadUpdate);\n      refetchLead(lead.id);\n      // The Request Was Fulffiled And The Lead Was updated\n      // So Let's Hide The EditLead Component\n      handleToggleActions(\"toggleDisplay\");\n    } catch (error) {\n        // display notification for error\n        addNotification({'title': error.response.data.message || \n          error.request.statusText,\n          'message': `Failed to edit lead`,\n        }, notificationError);\n    }\n    setIsLoading(false);\n  }\n\n  const handleFieldChange = event => {\n    const { name, value } = event.target;\n    setLeadUpdate(leadUpdate => ({ ...leadUpdate, [name]: value }));\n\t}\n\n  const handleSwitchChange = (event) => {\n    setLeadUpdate(leadUpdate => ({ ...leadUpdate, [event.target.name]: event.target.checked }));\n  };\n\nreturn (\n\t<Card className={classes.card}>\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div>\n        <TextField\n          id=\"filled-multiline-static\"\n          label=\"First name\"\n          name=\"first_name\"\n          multiline\n          rowsMax={2}\n          value={leadUpdate.first_name}\n          onChange={handleFieldChange}\n          variant=\"filled\"\n        />\n        <TextField\n          id=\"filled-multiline-static\"\n          label=\"Last name\"\n          name=\"last_name\"\n          multiline\n          rowsMax={10}\n          value={leadUpdate.last_name}\n          onChange={handleFieldChange}\n          variant=\"filled\"\n        />\n        <TextField\n          id=\"filled-multiline-static\"\n          label=\"Email\"\n          name=\"email\"\n          multiline\n          rowsMax={2}\n          value={leadUpdate.email}\n          onChange={handleFieldChange}\n          variant=\"filled\"\n        />\n        <TextField\n          id=\"filled-multiline-static\"\n          label=\"Notes\"\n          name=\"notes\"\n          multiline\n          rowsMax={2}\n          value={leadUpdate.notes}\n          onChange={handleFieldChange}\n          variant=\"filled\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={!!leadUpdate.contacted}\n              onChange={handleSwitchChange}\n              label=\"Contacted\"\n              name=\"contacted\"\n              inputProps={{ 'aria-label': 'secondary checkbox' }}\n            />\n          }\n          label={leadUpdate.contacted ? \n            \"contacted\" : \n            \"not contacted\"}\n          labelPlacement=\"start\"\n        />\n      </div>\n    </form>\n\t\t<CardActions>\n\t\t\t<IconButton onClick={() => handleToggleActions(\"toggleDisplay\")}>\n\t\t\t\t<NoteIcon />\n\t\t\t</IconButton>\n\t\t\t<IconButton>\n\t\t\t\t<DeleteForeverIcon />\n\t\t\t</IconButton>\n\t\t\t<IconButton onClick={() => handleToggleActions(\"toggleEdit\")}>\n\t\t\t\t<EditIcon />\n\t\t\t</IconButton>\n      <IconButton onClick={handleSubmit} disabled={isLoading}>\n        <DoneIcon />\n      </IconButton>\n\t\t</CardActions>\n  </Card>\n  );\n}\n\nEditLead.propTypes = {\n  lead: PropTypes.object,\n  handleToggleActions: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n  refetchLead: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    refetchLead: id => dispatch(refetchLead(id)),\n    addNotification: (data, level) => dispatch(level(data)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditLead);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nfunction DialogWithCallback(props) {\n\n\tconst { title, body, actionName, actionCallback } = {...props};\n\tconst [open, setOpen] = React.useState(true);\n\n\tconst handleClose = () => setOpen(false);\n\n\tconst handleAction = () => actionCallback();\n\n\treturn (\n\t\t<Dialog open={open} onClose={handleClose} \n\t\t\tdisableBackdropClick={true}>\n\t\t\t<DialogTitle>{title}</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<DialogContentText>\n\t\t\t\t\t{body}\n\t\t\t\t</DialogContentText>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button color=\"secondary\" \n\t\t\t\t\tonClick={handleClose}\n\t\t\t\t\tvariant=\"contained\">\n\t\t\t\t Cancel\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"secondary\" \n\t\t\t\t\tautoFocus=\"autoFocus\" \n\t\t\t\t\tonClick={handleAction}\n\t\t\t\t\tvariant=\"contained\">\n\t\t\t\t {actionName}\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n  );\n}\nexport default DialogWithCallback;","import React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EditLead from './EditLead';\nimport DialogWithCallback from '../Common/DialogWithCallback';\nimport { deleteLead } from '../../redux/actions/leads';\nimport { connect } from 'react-redux';\nimport CardActions from '@material-ui/core/CardActions';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    margin: theme.spacing(1, 1, 0, 0),\n    width: 20,\n    height: 20,\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nfunction LeadsCard(props) {\n\n\tconst { lead, deleteLead } = {...props};\n\tconst classes = useStyles();\n\tconst [toggleDisplay, setToggleDisplay] = useState(false);\n\tconst [toggleEdit, setToggleEdit] = useState(false);\n\tconst [toggleDelete, setToggleDelete] = useState(false);\n\n\tconst handleToggleActions = (action) => {\n\t\tif(action === \"toggleEdit\") {\n\t\t\tsetToggleEdit(!toggleEdit);\n\t\t\tif(toggleDisplay) {\n\t\t\t\tsetToggleDisplay(false);\n\t\t\t}\n\t\t}\n\t\tif(action === \"toggleDisplay\") {\n\t\t\tsetToggleDisplay(!toggleDisplay);\n\t\t\tif(toggleEdit) {\n\t\t\t\tsetToggleEdit(false);\n\t\t\t}\n\t\t}\n\t\tif(action === \"toggleDelete\") {\n\t\t\tsetToggleDelete(!toggleDelete);\n\t\t\tif(toggleEdit) {\n\t\t\t\tsetToggleEdit(false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<Grid item key={lead.id} xs={12} sm={6} md={4}>\n\t\t\t{!toggleEdit\n\t\t\t\t?\n\t\t\t\t<Card className={classes.card}>\n\t\t\t\t\t<CardContent className={classes.cardContent}>\n\t\t\t\t\t\t<Typography gutterBottom \n\t\t\t\t\t\tvariant=\"h4\" \n\t\t\t\t\t\tcomponent=\"h4\">\n\t\t\t\t\t\t\t{`${lead.first_name} ${lead.last_name}`}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography gutterBottom \n\t\t\t\t\t\tvariant=\"h5\" \n\t\t\t\t\t\tcomponent=\"h5\">\n\t\t\t\t\t\t\t{lead.email}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography  \n\t\t\t\t\t\tvariant=\"h6\" \n\t\t\t\t\t\tcomponent=\"h6\" \n\t\t\t\t\t\tgutterBottom>\n\t\t\t\t\t\t\t{!!lead.notes\n\t\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t\t\"Notes: \" + lead.notes\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t'Notes: No notes'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography  \n\t\t\t\t\t\t\tvariant=\"body2\" \n\t\t\t\t\t\t\tcomponent=\"body2\"\n\t\t\t\t\t\t\tgutterBottom>\n\t\t\t\t\t\t\t{!!lead.contacted\n\t\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t\t\"Contacted: Yes\"\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t'Contacted: No'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography  \n\t\t\t\t\t\t\tvariant=\"body2\" \n\t\t\t\t\t\t\tcomponent=\"p\"\n\t\t\t\t\t\t\tgutterBottom>\n\t\t\t\t\t\t\t{ \n\t\t\t\t\t\t\t!!lead.created_at\n\t\t\t\t\t\t\t&&\n\t\t\t\t\t\t\t\t` Created ${formatDistanceToNow(new Date (Date.parse(lead.created_at)))} ago`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography  \n\t\t\t\t\t\t\tvariant=\"body2\" \n\t\t\t\t\t\t\tcomponent=\"p\"\n\t\t\t\t\t\t\tgutterBottom>\n\t\t\t\t\t\t\t{ \n\t\t\t\t\t\t\t!!lead.updated_at \n\t\t\t\t\t\t\t&&\n\t\t\t\t\t\t\t\t` Updated ${formatDistanceToNow(new Date (Date.parse(lead.updated_at)))} ago`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t<IconButton onClick={() => handleToggleActions(\"toggleDelete\")} title=\"Delete note\">\n\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<IconButton onClick={() => handleToggleActions(\"toggleEdit\")} title=\"Edit note\">\n\t\t\t\t\t\t\t<EditIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</CardActions>\n\t\t\t\t</Card>\n\t\t\t\t:\n\t\t\t\t\t<EditLead lead={lead} \n\t\t\t\t\t\thandleToggleActions={handleToggleActions} />\n\t\t\t}\n\t\t\t{toggleDelete &&\n\t\t\t\t<DialogWithCallback \n\t\t\t\t\tactionCallback={() => deleteLead(lead.id)}\n\t\t\t\t\tactionName=\"Delete\"\n\t\t\t\t\ttitle=\"Delete lead\"\n\t\t\t\t\tbody={`Click delete to delete this lead`}\n\t\t\t\t/>\n\t\t\t}\n\t\t</Grid>\n\t);\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    leads: state.leads,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    deleteLead: id => dispatch(deleteLead(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeadsCard);","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LeadsCard from './Lead/LeadsCard';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nconst Leads = (props) => {\n\n\tconst { leads, loadLeads, label } = {...props};\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{leads && leads.length >= 1\n\t\t\t\t?\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<Grid container className={classes.cardGrid} spacing={2}>\n\t\t\t\t\t\t\t{leads.map((lead) => (\n\t\t\t\t\t\t\t\t<Fade in={true}>\n\t\t\t\t\t\t\t\t\t<LeadsCard lead={lead} key={lead.id} />\n\t\t\t\t\t\t\t\t</Fade>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t:\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<Grid container className={classes.cardGrid} spacing={4}>\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={6} md={4}>\n\t\t\t\t\t\t\t\t\t<Card className={classes.card}>\n\t\t\t\t\t\t\t\t\t\t<CardContent className={classes.cardContent}>\n\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom \n\t\t\t\t\t\t\t\t\t\t\tvariant=\"h6\" \n\t\t\t\t\t\t\t\t\t\t\tcomponent=\"h6\">\n\t\t\t\t\t\t\t\t\t\t\t{`No leads in ${label}`}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t            <IconButton onClick={loadLeads} title={`Refresh ${label}`}\n\t\t\t\t\t              className={classes.icons}>\n\t\t\t\t\t              <AutorenewIcon />\n\t\t\t\t\t            </IconButton>\n\t\t\t\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</React.Fragment>\n\t\t\t}\n\t\t</React.Fragment>\n\t);\n}\n\nexport default Leads;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { createLeadService } from '../../services/leads-api';\n\nimport { useDispatch } from 'react-redux';\nimport { error as notificationError } from 'react-notification-system-redux';\nimport { notificationTemplate } from '../../redux/methods';\nimport { setLead as addLead } from '../../redux/actions/leads';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '95% ',\n    },\n  },\n  shape: {\n    width: 30,\n    height: 30,\n  },\n  shapeCircle: {\n    borderRadius: '25%',\n  },\n  colors: {\n  \tmargin: theme.spacing(1),\n  \t'& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardColor: {\n    color: theme.palette.common.white,\n  }\n}));\n\nfunction AddLead(props) {\n\n  const { setDisplayAddLeadComponent } = {...props};\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [lead, setLead] = useState(\n    {\n      first_name: '', \n      last_name: '', \n      email: '',\n      notes: '',\n      contacted: false,\n    });\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n    try {\n      // Api Call To Create Lead\n      const response = await createLeadService(lead);\n      // The Request Was Fulffiled And The Lead Was Created\n      // So Let's Hide The AddLead Component\n      setDisplayAddLeadComponent(false);\n      // the response returns the created lead\n      // we add it to our leads\n      dispatch(addLead(response.data));\n    } catch (error) {\n        // display notification for error\n        dispatch(notificationError({'title': error.request.statusText,\n          'autoDismiss': 0,\n          'message': `Failed to add lead`,\n          'children': notificationTemplate.renderArray(error.response?.data?.errors),\n        }));\n    }\n    setIsLoading(false);\n  }\n\n  const handleFieldChange = event => {\n    const { name, value } = event.target;\n    setLead(lead => ({ ...lead, [name]: value }));\n\t}\n\n  const handleSwitchChange = (event) => {\n    setLead(lead => ({ ...lead, [event.target.name]: event.target.checked }));\n  };\n\nreturn (\n\t<Card className={classes.card}>\n    <form className={classes.root} noValidate>\n      <div>\n        <TextField\n          id=\"filled-multiline-static\"\n          label=\"First name\"\n          name=\"first_name\"\n          multiline\n          rowsMax={2}\n          value={lead.firstName}\n          onChange={handleFieldChange}\n          variant=\"filled\"\n        />\n        <TextField\n          id=\"filled-multiline-static\"\n          label=\"Last name\"\n          name=\"last_name\"\n          multiline\n          rowsMax={10}\n          value={lead.lastName}\n          onChange={handleFieldChange}\n          variant=\"filled\"\n        />\n        <TextField\n          id=\"filled-multiline-static\"\n          label=\"Email\"\n          type=\"email\"\n          name=\"email\"\n          multiline\n          rowsMax={2}\n          value={lead.email}\n          onChange={handleFieldChange}\n          variant=\"filled\"\n        />\n          <TextField\n          id=\"filled-multiline-static\"\n          label=\"Notes\"\n          type=\"text\"\n          name=\"notes\"\n          multiline\n          rowsMax={2}\n          value={lead.notes}\n          onChange={handleFieldChange}\n          variant=\"filled\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={!!lead.contacted}\n              onChange={handleSwitchChange}\n              label=\"Contacted\"\n              name=\"contacted\"\n              inputProps={{ 'aria-label': 'secondary checkbox' }}\n            />\n          }\n          label={lead.contacted ? \n            \"contacted\" : \n            \"not contacted\"}\n          labelPlacement=\"start\"\n        />\n      </div>\n    </form>\n\t\t<CardActions>\n      <IconButton onClick={handleSubmit} disabled={isLoading}>\n        <DoneIcon />\n      </IconButton>\n\t\t</CardActions>\n  </Card>\n  );\n}\n\n\nexport default AddLead;","import React, { useState, useEffect } from 'react';\nimport Leads from '../components/Leads';\nimport { makeStyles } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport Divider from '@material-ui/core/Divider';\nimport { getLeads } from '../redux/actions/leads';\nimport { connect } from 'react-redux';\nimport AddLead from '../components/Lead/AddLead'\n\nexport const useStyles = makeStyles((theme) => ({\n  card: {\n    display: \"flex\",\n    margin: theme.spacing(1),\n    boxShadow: 'none !important'\n  },\n  cardDetails: {\n    flex: 1\n  },\n  cardMedia: {\n    minWidth: 160,\n  },\n  a: {\n    textDecoration: 'none',\n    color: theme.palette.secondary.main\n  },\n  divider: {\n    margin: theme.spacing(1, 0, 2, 0),\n  }\n}));\n\n\nconst Home = (props) => {\n\t\n  const { leads, loadLeads } = {...props};\n\tconst classes = useStyles();\n  const [displayAddLeadComponent, setDisplayAddLeadComponent] = useState(false);\n\n  useEffect(\n    () => {\n      if (\n          !leads.leads.length && \n          !leads.isLoading && \n          !leads.isLoaded &&\n          !leads.isError) loadLeads()\n    }, \n    [leads, loadLeads]\n  );\n\n\treturn (\n\t\t<React.Fragment>\n      <IconButton onClick={() => setDisplayAddLeadComponent(!displayAddLeadComponent)}>\n        <NoteAddIcon />\n      </IconButton>\n      <Divider className={classes.divider} />\n      {displayAddLeadComponent &&\n        <React.Fragment>\n          <AddLead \n            setDisplayAddLeadComponent={setDisplayAddLeadComponent} />\n          <Divider className={classes.divider} />\n        </React.Fragment>\n      }\n      <IconButton>\n        <WatchLaterIcon />\n      </IconButton>\n      <Leads leads={leads.leads} \n        loadLeads={loadLeads} \n        label='Recent' />\n\t\t</React.Fragment>\n\t);\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    leads: state.leads,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadLeads: () => dispatch(getLeads()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import axios from 'axios'; \n\n// window origin - base url\nconst origin = window.location.origin;\naxios.defaults.baseURL = origin;\n\n\nconst config = {\n  defaultPaletteColors: {\n    primary: {\n      light: '#484848',\n      main: '#212121',\n      dark: '#000000',\n    },\n    secondary: {\n      light: '#ffff6e',\n      main: '#009688',\n      dark: '#009692',\n    },\n  },\n}\n\nexport default config;\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Header from './components/Header/Header';\nimport Home from './containers/Home';\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport config from './config';\nimport Notifications from 'react-notification-system-redux';\nimport { connect } from 'react-redux';\nimport { changeDocumentTitle } from './util/methods';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"auto\",\n    marginTop: theme.spacing(10),\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(1100 + theme.spacing(3 * 2))]: {\n      width: 1100,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n}));\n\n//Optional styling\nconst UINotificationsStyle = {\n  NotificationItem: { // Override the notification item\n    DefaultStyle: { // Applied to every notification, regardless of the notification level\n      margin: '5px 5px 2px 1px'\n    },\n  }\n};\n\nexport function App(props) {\n\n  const { notifications } = {...props};\n  changeDocumentTitle(\"Leads Management App\");\n  const classes = useStyles();\n  const theme = createMuiTheme({\n    palette: {\n      type: 'light',\n      primary: config.defaultPaletteColors.primary,\n      secondary: config.defaultPaletteColors.secondary,\n      contrastThreshold: 3,\n      tonalOffset: 0.2,\n    },\n    typography: {\n      fontSize: 14,\n    },\n  });\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Grid component=\"main\" className={classes.root}>\n        <Header />\n        <Notifications\n          notifications={notifications}\n          style={UINotificationsStyle}\n        />\n        <Home />\n      </Grid>\n    </MuiThemeProvider>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notifications: state.notifications,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","export const range = (start, stop, step=1) => \nArray.from({ length: (stop - start) / step }, (_, i) => start + (i * step));\n\nexport const truncate = (what, length=100) => \n  what !== null && what !== undefined \n  \t&& (what.length < length) ? what : what.substring(0, length) + '..';\n\nexport const changeDocumentTitle = title => window.document.title = title;\n","import { FETCH_LEAD,\n\tFETCH_LEAD_SUCCESS, \n\tFETCH_LEAD_FAILURE,\n\tREFETCH_LEAD_SUCCESS,\n\tDELETE_LEAD_SUCCESS,\n\t } from '../constants/leads';\nimport { filterArrayWithId, concatArrayOfObjectsAndSortWithDateAsc } from '../methods';\n\nconst INITIAL_STATE = {\n\t\tleads: [],\n\t\tcount: 0,\n\t\tisLoading: false,\n\t\tisLoaded: false,\n};\n\nfunction leads(state=INITIAL_STATE, action) {\n\n\tswitch (action.type){\n\t\tcase FETCH_LEAD: {\n\t\t\treturn {...INITIAL_STATE, \n\t\t\t\t\tisLoading: true\n\t\t\t\t}\n\t\t\t}\n\t\tcase FETCH_LEAD_SUCCESS: {\n\t\t\treturn {...state,\n\t\t\t\t\tleads: concatArrayOfObjectsAndSortWithDateAsc(action.payload || state.leads),\n\t\t\t\t\tcount: state.leads.length,\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t}\n\t\t\t}\n\t\tcase FETCH_LEAD_FAILURE: {\n\t\t\treturn {...state, \n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t}\n\t\t\t}\n\t\tcase REFETCH_LEAD_SUCCESS: {\n\t\t\treturn {...state, \n\t\t\t\t\tleads: concatArrayOfObjectsAndSortWithDateAsc(\n\t\t\t\t\t\tfilterArrayWithId(state.leads, action.payload?.id), [action.payload]),\n\t\t\t\t\tcount: state.leads.length,\n\t\t\t}\n\t\t}\n\t\tcase DELETE_LEAD_SUCCESS: {\n\t\t\treturn {...state,\n\t\t\t\t\tleads: filterArrayWithId(state.leads, action.payload.lead_id),\n\t\t\t\t\tcount: state.leads.length,\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tisLoaded: true,\n\t\t\t\t}\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default leads;\n","import { combineReducers } from 'redux';\nimport leads from './leads';\nimport {reducer as notifications } from 'react-notification-system-redux';\n\nconst rootReducer = combineReducers({leads, notifications});\n\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport rootReducer from './reducers';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk, logger)));\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\t rootElement);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}