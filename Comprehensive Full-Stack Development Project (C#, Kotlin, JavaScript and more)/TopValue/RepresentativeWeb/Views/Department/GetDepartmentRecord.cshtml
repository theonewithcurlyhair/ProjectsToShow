@model Model.Entities.Departments

@if (ViewBag.Success != "")
{
    <p style="color:green">@ViewBag.Success</p>
}
@if (Model != null)
{
    if (Model.Errors.Count > 0)
    {
        <div class="text-danger">
            <ul>
                @foreach (var e in Model.Errors)
                {
                    <li>@e.ErrorName</li>
                }
            </ul>
        </div>
    }
}
@using (Ajax.BeginForm("GetDepartmentRecord", "Department", new AjaxOptions
{
    HttpMethod = "POST",
    UpdateTargetId = "partialDiv"
}))
{
    @Html.AntiForgeryToken()
    @Html.EditorFor(model => model.DepartmentID, new { htmlAttributes = new { @class = "form-control", @type = "hidden" } })

    <div class="form-horizontal">
        <h5>Department Info</h5>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, ViewBag.UserDep != "HR Department" ? (object)new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" }} : new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InvocDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InvocDate, ViewBag.UserDep != "HR Department" ? (object)new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" }} : new { htmlAttributes = new { @class = "form-control", placeholder = "MM/DD/YY" } })
                @Html.ValidationMessageFor(model => model.InvocDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-5 col-md-10">
                <button type="submit" class="btn btn-primary btn-lg waves-effect waves-light">Save</button>
            </div>
        </div>
    </div>
}

